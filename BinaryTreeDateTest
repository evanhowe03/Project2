
/**
 * 
 */

import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import org.junit.Test;
import student.TestCase;

/**
 * 
 */
public class BinaryTreeDateTest extends TestCase {

    private BinaryTreeDate<Seminar> tree;
    private Seminar sem;
    private Seminar sem1;
    private Seminar sem2;
    private Seminar sem3;
    private Seminar sem5;
    private Seminar sem6;
    private Seminar sem7;
    private Seminar sem8;
    private final ByteArrayOutputStream outputStreamCaptor =
        new ByteArrayOutputStream();

    public void setUp() {

        tree = new BinaryTreeDate<Seminar>();

        System.setOut(new PrintStream(outputStreamCaptor));

        String title = "fish"; // Seminar title
        String date = "0610071600"; // Seminar date
        int length = 30; // Seminar length
        String[] keywords = { "fish", "hampster", "wheel" }; // Seminar keywords
        short x = 60; // Seminar x coord
        short y = 20; // Seminar y coord
        String desc =
            "Introduction to   bioinformatics and computation biology"; // Seminar
                                                                        // description
        int cost = 300; // Seminar cost
        int id = 1; // Seminar ID

        sem = new Seminar(id, title, date, length, x, y, cost, keywords, desc);
        sem1 = new Seminar(0, title, "0610081600", length, x, y, 20, keywords,
            desc);
        sem2 = new Seminar(3, title, "0210071600", length, x, y, 30, keywords,
            desc);
        sem3 = new Seminar(4, title, "0810071900", length, x, y, 40, keywords,
            desc);
        sem5 = new Seminar(7, title, date, length, x, y, cost, keywords, desc);
        sem6 = new Seminar(6, title, "0610081600", length, x, y, 20, keywords,
            desc);
        sem7 = new Seminar(9, title, "0210071600", length, x, y, 30, keywords,
            desc);
        sem8 = new Seminar(5, title, "1810071900", length, x, y, 40, keywords,
            desc);

    }


    public void testInsert() {

        tree.insert(sem);
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);

        String print = tree.toInOrderString(tree.returnRoot());

        System.out.println(print);

        String printedText = outputStreamCaptor.toString();
        assertFuzzyEquals(printedText, sem2.toString() + sem.toString() + sem1
            .toString() + sem3.toString());

    }


    public void testCompareSem() {
        assertEquals(1, tree.compareSem(sem3, sem1));
        assertEquals(-1, tree.compareSem(sem2, sem3));
        assertEquals(0, tree.compareSem(sem1, sem1));
    }


    public void testInOrderSearch() {
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);
        tree.insert(sem);
        tree.insert(sem5);
        tree.insert(sem8);

        tree.inOrderSearch(tree.returnRoot(), "0", "1", 0, true);
        String printedText = outputStreamCaptor.toString();

        assertFuzzyEquals("id 0 title fish\r\n"
            + "date 0610081600 length 30 x 60 y 20 cost 20\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheel\r\n" + "id 3 title fish\r\n"
            + "date 0210071600 length 30 x 60 y 20 cost 30\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheel\r\n" + "id 1 title fish\r\n"
            + "date 0610071600 length 30 x 60 y 20 cost 300\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheel\r\n" + "id 7 title fish\r\n"
            + "date 0610071600 length 30 x 60 y 20 cost 300\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheel\r\n" + "id 4 title fish\r\n"
            + "date 0810071900 length 30 x 60 y 20 cost 40\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheel", printedText);

    }


    public void testIn2() {
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);
        tree.insert(sem);
        tree.insert(sem5);
        tree.insert(sem8);

        assertEquals(12, tree.inOrderSearch(tree.returnRoot(), "1", "2", 0, true));
        
        String printedText = outputStreamCaptor.toString();
        assertFuzzyEquals(sem8.toString(), printedText);
    }


    public void testIn3() {
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);
        tree.insert(sem);
        tree.insert(sem5);
        tree.insert(sem8);

        assertEquals(12,tree.inOrderSearch(tree.returnRoot(), "0", "0", 0, true));
        
        assertFuzzyEquals("", "");

    }


    public void testHeight() {
        tree.insert(sem);
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);

        assertEquals(3, tree.height(tree.returnRoot()));
    }


    public void testSize() {
        tree.insert(sem);
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);

        assertEquals(4, tree.size(tree.returnRoot()));
    }


    public void testString() {
        tree.insert(sem);
        tree.insert(sem1);
        tree.insert(sem2);
        tree.insert(sem3);

        assertFuzzyEquals("id 3 title fish\r\n"
            + "date 0210071600 length 30 x 60 y 20 cost 30\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheelid 1 title fish\r\n"
            + "date 0610071600 length 30 x 60 y 20 cost 300\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheelid 0 title fish\r\n"
            + "date 0610081600 length 30 x 60 y 20 cost 20\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheelid 4 title fish\r\n"
            + "date 0810071900 length 30 x 60 y 20 cost 40\r\n"
            + "description introduction to bioinformatics and computation biology\r\n"
            + "keywords fish hampster wheel", tree.toInOrderString(tree
                .returnRoot()));
    }

}
