/**
 * 
 */

/**
 * 
 */
public class LeafNode implements BinNode {
    private SinglyLinkedList<Seminar> list;
    // private boolean isLeaf;
    private Seminar value;

    public LeafNode(Seminar sem) {
        // isLeaf = true;
        this.value = sem;
        this.list = new SinglyLinkedList<Seminar>();
        // list.add(sem);
    }


    public void setElement() {

    }


    @Override
    public boolean isLeaf() {
        // TODO Auto-generated method stub
        return true;
    }


    @Override
    public BinNode insert(
        Seminar sem,
        int widthLow,
        int widthHigh,
        int heightLow,
        int heightHigh,
        int level) {

        // if i have am empty node
        // add it to the list
        // return this

        // if i have matching coordinates
        // add seminar to the list
        // return this

        // if i have coordinates that don't match
        // create an internal node
        // for loop that goes through all elements in the list
        // call the insert method
        // after the for loop, return the internal node

        if (list.isEmpty()) {
            list.add(sem);
            return this;
        }
        else if (sem.x() == list.get(0).x() && sem.y() == list.get(0).y()) {
            list.add(sem);
            return this;
        }
        else {
            IntlNode newNode = new IntlNode(EmptyNode.getEmpty(), EmptyNode
                .getEmpty());
            list.add(sem);
            int size = list.size();

            for (int i = 0; i < size; i++) {

                newNode.insert(list.get(i), widthLow, widthHigh, heightLow,
                    heightHigh, level);

            }
            // Insert the new seminar

            // Clear the list
            // list.clear();
            return newNode;
        }

    }


    @Override
    public boolean isEmpty() {
        // TODO Auto-generated method stub
        return false;
    }


    @Override
    public void print() {
        System.out.println("Leaf with " + (list.size() + 1) + " objects: "
            + value.id());

    }


    @Override
    public int search() {
        // TODO Auto-generated method stub
        return 0;
    }


    @Override
    public BinNode delete() {
        // TODO Auto-generated method stub
        return null;
    }

}
